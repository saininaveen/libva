Description: Hide internal symbols
 This patch hides many internal symbols.
Author: Sebastian Ramacher <sramacher@debian.org>
Last-Update: 2014-12-15

--- a/va/va_fool.h
+++ b/va/va_fool.h
@@ -27,6 +27,7 @@
 #define VA_FOOL_H
 
 #include <stdio.h>
+#include "sysdeps.h"
 
 #ifdef __cplusplus
 extern "C" {
@@ -45,10 +46,10 @@
             return VA_STATUS_SUCCESS;          \
     }
     
-void va_FoolInit(VADisplay dpy);
-int va_FoolEnd(VADisplay dpy);
+DLL_HIDDEN void va_FoolInit(VADisplay dpy);
+DLL_HIDDEN int va_FoolEnd(VADisplay dpy);
 
-int va_FoolCreateConfig(
+DLL_HIDDEN int va_FoolCreateConfig(
         VADisplay dpy,
         VAProfile profile, 
         VAEntrypoint entrypoint, 
@@ -58,7 +59,7 @@
 );
 
 
-VAStatus va_FoolCreateBuffer(
+DLL_HIDDEN VAStatus va_FoolCreateBuffer(
     VADisplay dpy,
     VAContextID context,	/* in */
     VABufferType type,		/* in */
@@ -68,13 +69,13 @@
     VABufferID *buf_id		/* out */
 );
 
-VAStatus va_FoolMapBuffer (
+DLL_HIDDEN VAStatus va_FoolMapBuffer (
     VADisplay dpy,
     VABufferID buf_id,	/* in */
     void **pbuf 	/* out */
 );
 
-VAStatus va_FoolBufferInfo (
+DLL_HIDDEN VAStatus va_FoolBufferInfo (
     VADisplay dpy,
     VABufferID buf_id,  /* in */
     VABufferType *type, /* out */
@@ -82,7 +83,7 @@
     unsigned int *num_elements /* out */
 );
     
-VAStatus va_FoolCheckContinuity(VADisplay dpy);
+DLL_HIDDEN VAStatus va_FoolCheckContinuity(VADisplay dpy);
 
 #ifdef __cplusplus
 }
--- a/va/va.c
+++ b/va/va.c
@@ -54,7 +54,7 @@
  * return 0: the "env" is set, and the value is copied into env_value
  *        1: the env is not set
  */
-int va_parseConfig(char *env, char *env_value)
+DLL_HIDDEN int va_parseConfig(char *env, char *env_value)
 {
     char *token, *value, *saveptr;
     char oneline[1024];
@@ -102,7 +102,7 @@
     return pDisplayContext && (pDisplayContext->vadpy_magic == VA_DISPLAY_MAGIC) && pDisplayContext->vaIsValid(pDisplayContext);
 }
 
-void va_errorMessage(const char *msg, ...)
+DLL_HIDDEN void va_errorMessage(const char *msg, ...)
 {
     char buf[512], *dynbuf;
     va_list args;
@@ -127,7 +127,7 @@
         va_log_error(buf);
 }
 
-void va_infoMessage(const char *msg, ...)
+DLL_HIDDEN void va_infoMessage(const char *msg, ...)
 {
     char buf[512], *dynbuf;
     va_list args;
@@ -1029,7 +1029,7 @@
   return ctx->vtable->vaDestroyBuffer( ctx, buffer_id );
 }
 
-VAStatus vaBufferInfo (
+DLL_HIDDEN VAStatus vaBufferInfo (
     VADisplay dpy,
     VAContextID context,	/* in */
     VABufferID buf_id,		/* in */
@@ -1612,7 +1612,7 @@
   return va_status;
 }
 
-VAStatus vaLockSurface(VADisplay dpy,
+DLL_HIDDEN VAStatus vaLockSurface(VADisplay dpy,
     VASurfaceID surface,
     unsigned int *fourcc, /* following are output argument */
     unsigned int *luma_stride,
@@ -1633,7 +1633,7 @@
 }
 
 
-VAStatus vaUnlockSurface(VADisplay dpy,
+DLL_HIDDEN VAStatus vaUnlockSurface(VADisplay dpy,
     VASurfaceID surface
 )
 {
--- a/va/va_fool.c
+++ b/va/va_fool.c
@@ -61,7 +61,7 @@
 
 
 /* global settings */
-int fool_codec = 0;
+DLL_HIDDEN int fool_codec = 0;
 int fool_postp  = 0;
 
 #define FOOL_BUFID_MAGIC   0x12345600
